enclave {
    from "sgx_backtrace.edl" import *;
    from "sgx_tstd.edl" import *;
    from "sgx_stdio.edl" import *;
    from "sgx_fs.edl" import *;
    from "sgx_net.edl" import *;
    from "sgx_time.edl" import *;
    from "sgx_tstdc.edl" import *;
    from "sgx_pipe.edl" import *;

    include "sgx_quote.h"
    include "anonify-types.h"

    trusted {
        public sgx_status_t ecall_get_state(
            [in] uint8_t sig[64],
            [in] uint8_t pubkey[32],
            [in] uint8_t msg[32],
            [out] uint64_t* state
        );

        public sgx_status_t ecall_write_state(
            [in] uint8_t ciphertext[60]
        );

        public sgx_status_t ecall_state_transition(
            [in] uint8_t sig[65],
            [in] uint8_t target[20],
            [in] uint64_t* value,
            [out] TransitionResult* result
        );

        public sgx_status_t ecall_contract_deploy(
            [in] uint8_t sig[65],
            [in] uint64_t* value,
            [out] TransitionResult* result
        );

        public void ecall_run_tests(
            [in] const RawPointer* ext_ptr,
            [out] ResultStatus* result
        );
    };

    untrusted {
        /*
        sgx_status_t ocall_get_ciphertext();

        sgx_status_t ocall_write_ciphertext();

        */

        sgx_status_t ocall_sgx_init_quote(
            [out] sgx_target_info_t *ret_ti,
            [out] sgx_epid_group_id_t *ret_gid
        );

        sgx_status_t ocall_get_quote(
            [in, size = sigrl_len] const uint8_t *p_sigrl,
            uint32_t sigrl_len,
            [in] const sgx_report_t *report,
            sgx_quote_sign_type_t quote_type,
            [in] const sgx_spid_t *p_spid,
            [in] const sgx_quote_nonce_t *p_nonce,
            [out] sgx_report_t *p_qe_report,
            [out, size = maxlen] sgx_quote_t *p_quote,
            uint32_t maxlen,
            [out] uint32_t* p_quote_len
        );
    };
};
